name: Docker Test Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - test
    types: [closed]

jobs:
  Docker-CD-Test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Build the application
        working-directory: ./backend/pawsitive
        run: |
          ./mvnw clean package -DskipTests

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        working-directory: ./backend/pawsitive
        run: |
          IMAGE_TAG=dezsoab/springboot_backend:test-${{ github.sha }}
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG

      - name: SSH into test server and deploy
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.SSH_USERNAME }}
          host: ${{ secrets.SSH_HOST_TEST }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Define variables
            COMPOSE_DIR="/server"
            COMPOSE_FILE="docker-compose.test.yml"
            IMAGE_TAG="dezsoab/springboot_backend:test-${{ github.sha }}"

            # Ensure the directory exists
            if [ ! -d "$COMPOSE_DIR" ]; then
              echo "Error: Directory $COMPOSE_DIR does not exist!"
              exit 1
            fi

            cd $COMPOSE_DIR

            # Ensure the compose file exists
            if [ ! -f "$COMPOSE_FILE" ]; then
              echo "Error: $COMPOSE_FILE not found in $COMPOSE_DIR!"
              exit 1
            fi

            # Pull the latest image
            docker pull $IMAGE_TAG

            # Update docker-compose file with new image tag
            sed -i 's|image: dezsoab/springboot_backend:test.*|image: '$IMAGE_TAG'|' $COMPOSE_FILE

            # Restart services using the correct compose file
            docker-compose -f $COMPOSE_FILE down
            docker-compose -f $COMPOSE_FILE up -d --force-recreate
